print('******************************************************************')

#リスト化
l = [1, 20, 4, 50, 2, 1, 2]
print(l)

##リストにもインデックスがある。インデックス指定でリストの中身を表示できる。
##[0, 1, 2, 3, 4, 5, 6]←インデックスの番号
print(l[0])
print(l[1])
print(l[6])

print('******************************************************************')

##「-」を使えば、インデックスを後ろから指定してリストの中身を表示できる。
###「-0」という指定の仕方はない
print(l[-1])
print(l[-2])

print('******************************************************************')

##「[:]」で範囲指定してリストの中身を表示できる。
print(l[1:6])
print(l[:6])
print(l[2:5])
print(l[2:])
print(l[:])

print('******************************************************************')

#lenで
print(len(l))
print(type(l))

print('******************************************************************')

print('abcdefgh')
print('abcdefgh', type('abcdefgh'))

print('******************************************************************')

print(list('abcdefgh'))
print(list('abcdefgh'), type(list('abcdefgh') ))

##もちろんprint(l[100])とプログラムしても、インデックスが100個ないのでエラーになる

print('******************************************************************')

#2つ飛ばしでリストの中身を出力する
n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(n[::2])

print('******************************************************************')

#リストの中身を後ろから出力する
print(n[::-1])

print('******************************************************************')

#ネスト=リストの中にリストを表示させる
a = ['a', 'b', 'c']
n = [1, 2, 3]
x = [a, n]
print(x)

print('******************************************************************')

#ネストのまとまりをインデックスで指定する
print(x[0])
print(x[1])

#ネストの中身を指定して出力する
print(x[0][1])
print(x[1][2])

print('******************************************************************')
