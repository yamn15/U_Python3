print('******************************************************************')

# x.index()で、指定した値が、リスト内のどの位置にあるかを検索する
## 3は先頭から3つめの位置(0,1,2)にいるという結果が返ってくる
r = [1, 2, 3, 4, 5, 1, 2, 3]
print(r.index(3))

print('******************************************************************')

# 3を、3めのインデックスの位置から検索する際の構文
r = [1, 2, 3, 4, 5, 1, 2, 3]
print(r.index(3, 3))

print('******************************************************************')

# リスト内の値の個数をカウントするメソッド
print(r.count(3))

print('******************************************************************')

# リスト内に特定の値がある場合に、何かを出力する(if分との組み合わせ)
if 5 in r:
    print('exit')

print('******************************************************************')

##100は存在しないので、出力はされない
if 100 in r:
    print('exit')

print('******************************************************************')

# リストをソートするメソッド
r.sort()
print(r)

# リストを逆方向からソートするメソッド1
r.sort(reverse=True)
print(r)

# リストを逆方向からソートするメソッド2
r.reverse()
print(r)

print('******************************************************************')

# 定義した変数をスプリット関数(x.split())で分けてリスト化する
## 今回はsに入っている文字列の中のスペース「' '」をスプリットで指定し、空白行で分けてリスト内を分割する
## 存在しない文字列(例えば!!!)をsplitメソッドの中に入れても分割はされない
s = 'My name is Mike.'
to_split = s.split(' ')
##to_split = s.split('!!!')
print(to_split)

print('******************************************************************')

# 文字列のメソッドx.joinで分割されたリストを一つに戻せる
## ' 'や'###'などを挿入したうえで、リストの中身を結合するというメソッド
## x = ' '.join(to_split)
x = '###'.join(to_split)
print(x)

print('******************************************************************')

# help関数で、指定のメソッドを参照できる
# print(help(list))







