# デフォルト引数の注意点
print('**********************************************************************')

def test_func(x, l=[]):
    l.append(x)
    return l

y = [1, 2, 3]
r = test_func(100,y)
print(r)

y = [1, 2, 3]
r = test_func(200,y)
print(r)

print('**********************************************************************')

def test_func2(x, l=[]):
    l.append(x)
    return l

r = test_func2(100)
print(r)

# pythonではリストやdictなどをデフォルト引数で与えるべきではない。
## 複数回リストのデフォルト引数が入った関数を回すと、バグにつながりやすい。参照渡しになってしまうから
### pythonでは中身が空のリストをデフォルト引数として使用すると、中身が空のリストのアドレスが生成される
#### 生成されたアドレスが2回目以降の関数の処理で使用されるので、予期せず値が出力される場合がある
r = test_func2(100)
print(r)

print('**********************************************************************')

# 中身が空のリストを関数として複数回使用したい場合、Noneを定義して使用すればいい
## 何らかの引数がある場合は、appendの処理に移る
### 引数がなかった(None)場合、その都度からのリストを生成するif文を書く
def test_func3(x, l=None):
    if l is None:
        l = []
    l.append(x)
    return l

r = test_func3(100)
print(r)

r = test_func3(200)
print(r)

# pythonでは文字列や整数をデフォルト引数に設定するのはOK
## リストや辞書などはデフォルト引数に設定しないほうがいい



